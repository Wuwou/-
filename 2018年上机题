1，  求众数。  众数就是一个序列中出现次数最多的数字。 如果不唯一，则输出小的那个值。   给定第一个代表有几个数字。  1<=n<=10^5   每个数字在 int 范围内
样例：   
输入，  （第一个代表有几个数字）
8
10 3 8 8 3 2 2 2
输出   2

```cpp
#include <cstdio>
 #include <iostream>
 #include <string>
 #include <cstring>
 #include <algorithm>
 #include <cmath>
 #include <stdlib.h>
 #include <time.h>
 #include <map>
 using namespace std;
 int main()
 {
 //如果考试要求文本读入，输出，则下面两句话去掉注释
 //freopen("input.txt", "r", stdin);
 //freopen("output.txt", "w", stdout);
 map<int, int> mp;
 int n;
 scanf("%d", &n);
 for (int i = 0; i < n; i++) {
 int temp;
 scanf("%d", &temp);
 mp[temp]++;
 }
 int max = 0, ans;
 for (map<int, int>::iterator it = mp.begin(); it != mp.end(); it++) {
 printf("%d %d\n", it->first, it->second);
 if (max < it->second) {
 max = it->second;
 ans = it->first;
 }
 }
 printf("%d\n", ans);
 return 0;
 }

```


2，  解方程。    给定一个字符串，代表一个 一元一次 方程。 如果有解求解，输出格式“x=数字” ，如果解的个数无穷，输出 “infinite solutions”。 如果 没有解输出“no solution”
字符串 长度不超过 256 。 样例：
10x-2x-8=4x+7+x
输出:
x=5
```cpp
#include <cstdio>
#include <iostream>
#include <vector>
#include <stack>
#include <string>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <stdlib.h>
#include <time.h>
#include <map>
#include <set>
#include <unordered_map>
#include <cctype>
#include <queue>
using namespace std;
void GetX(string s, int &a, int &b) {
 string temp;
 for (int i = 0; i < s.length(); i++) {
 if (s[i] <= '9' && s[i] >= '0') {
 temp += s[i];
 }
 else if (s[i] == 'x') {
 if (temp == "+" || temp == "-"|| temp == ""){ //防止出现+x，-x，x
 temp += '1';
 }
 a += stoi(temp);
 temp.clear();
 }
 else {
 if (temp.length() != 0) {
 b += stoi(temp);
 }
 temp.clear();
 temp = s[i];
 }
 }
 if (temp.length() != 0) {
 b += stoi(temp);
 }
}
int main()
{
 string s;
 getline(std::cin, s);
 int j = s.find('=');
 if (j == string::npos) { // such as:2+2+4 no'='
 printf("no solution\n");
 return 0;
 }
 string s1 = s.substr(0, j); //'='左边的字符串10x-2x-8
 string s2 = s.substr(j + 1, s.length() - j - 1); //'='右边的字符串4x+7+x
 int lefta = 0, leftb = 0, righta = 0, rightb = 0;//lefta:左边x的系数 leftb：左边常数 righta，rightb同理
 GetX(s1, lefta, leftb);
 GetX(s2, righta, rightb);
 int a, b;
 a = lefta - righta;
 b = rightb - leftb;
 if (a != 0) { //such as:3x = random;
 printf("x=%d", b / a);
 }
 else {
 if (b != 0) { //such as:0x = random; (random = 1,2,3...)
 printf("no solution\n");
 }
 else { //such as:0x = 0;
 printf("infinite solutions\n");
 }
 }
 return 0;
}

```


3， 骨牌。   有2*n 的地板，用1*2和 2*1 的骨牌进行铺地板。问共有多少种情况。  结果对 999983 取余   。   1<=n<=10000 。  样例：
6
输出： 
13
```cpp
#include <cstdio>
#include <iostream>
#include <vector>
#include <stack>
#include <string>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <stdlib.h>
#include <time.h>
#include <map>
#include <set>
#include <unordered_map>
#include <cctype>
#include <queue>
using namespace std;
int main()
{
 int n;
 int mod = 999983;
 scanf("%d", &n);
 if(n == 0){
 printf("0\n");
 }
 else if(n == 1){
 printf("1\n");
 }
 else if(n == 2){
 printf("2\n");
 }
 else{
 vector<int> dp(n + 1);
 dp[0] = 0;
 dp[1] = 1;
 dp[2] = 2;
 for(int i = 3; i <= n; i++){
 dp[i] = (dp[i - 1] +dp[i - 2]) % mod;
 }
 printf("%d", dp[n]);
 }
 return 0;
}

```
